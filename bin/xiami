#!/usr/bin/env ruby
# encoding: utf-8

require 'main'

require 'xiami_cloner'

Main {
	mode 'single' do
		mode 'download'	do
			argument('id') {
				cast :int
				description 'The ID of the song to be downloaded. '
			}

			option('output-dir', 'o') {
				optional
				argument_required
				cast :string
				description 'The output directory. Defaults to the current directory. '
				default '.'
			}

			option('import-to-itunes', 'i') {
				optional
				cast :bool
				description 'If this option is used, downloaded songs would be automatically imported into iTunes. '
				default false
			}

			def run()
				outdir = File.expand_path(params['output-dir'].value)
				id = params['id'].value

				options = {
					import_to_itunes: params['import-to-itunes'].value
				}

				XiamiCloner::Cloner.clone_song(id, outdir, options)
			end
		end
	end

	mode 'album' do
		mode 'list' do
			argument('album_id') {
				cast :int
				description 'The ID of the album to be listed. '
			}

			def run()
				id = params['album_id'].value

				XiamiCloner::Cloner.retrieve_album_list(id).each { |s| puts s }
			end
		end

		mode 'download' do
			argument('album_id') {
				cast :int
				description 'The ID of the album to be downloaded. '
			}

			option('output-dir', 'o') {
				optional
				argument_required
				cast :string
				description 'The output directory. Defaults to the current directory. '
				default '.'
			}

			option('import-to-itunes', 'i') {
				optional
				cast :bool
				description 'If this option is used, downloaded songs would be automatically imported into iTunes. '
				default false
			}

			def run()
				outdir = File.expand_path(params['output-dir'].value)
				id = params['album_id'].value

				options = {
					import_to_itunes: params['import-to-itunes'].value
				}

				list = XiamiCloner::Cloner.retrieve_album_list(id)

				list.each do |song|
					XiamiCloner::Cloner.clone_song(song, outdir, options)
				end
			end
		end
	end

	mode 'sync' do 
		argument('dir') {
			cast :string
			description 'The directory to be synced. '
		}

		option('import-to-itunes', 'i') {
			optional
			cast :bool
			description 'If this option is used, downloaded songs would be automatically imported into iTunes. '
			default false
		}

		def run()
			dir = File.expand_path(params['dir'].value)
			playlist_file = File.join(dir, '.playlist')
			cloned_file = File.join(dir, '.cloned')

			options = {
				cloned_file: cloned_file, 
				import_to_itunes: params['import-to-itunes'].value
			}

			XiamiCloner::Cloner.clone(playlist_file, dir, options)
		end
	end
}